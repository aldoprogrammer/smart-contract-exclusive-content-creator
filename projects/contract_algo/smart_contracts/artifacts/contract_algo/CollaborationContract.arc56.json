{
    "name": "CollaborationContract",
    "structs": {},
    "methods": [
        {
            "name": "initialize",
            "args": [
                {
                    "type": "string",
                    "name": "brandName"
                },
                {
                    "type": "string",
                    "name": "creatorName"
                },
                {
                    "type": "string",
                    "name": "adminName"
                },
                {
                    "type": "uint64",
                    "name": "contractPrice"
                },
                {
                    "type": "string",
                    "name": "proposalText"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "getDetails",
            "args": [],
            "returns": {
                "type": "(string,string,string,uint64,string)"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 1,
                "bytes": 4
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {
                "brandName": {
                    "keyType": "AVMString",
                    "valueType": "AVMString",
                    "key": "YnJhbmROYW1l"
                },
                "creatorName": {
                    "keyType": "AVMString",
                    "valueType": "AVMString",
                    "key": "Y3JlYXRvck5hbWU="
                },
                "adminName": {
                    "keyType": "AVMString",
                    "valueType": "AVMString",
                    "key": "YWRtaW5OYW1l"
                },
                "contractPrice": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "Y29udHJhY3RQcmljZQ=="
                },
                "proposalText": {
                    "keyType": "AVMString",
                    "valueType": "AVMString",
                    "key": "cHJvcG9zYWxUZXh0"
                }
            },
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        97,
                        220
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        265
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        100,
                        223
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        296,
                        300,
                        304,
                        308,
                        313
                    ],
                    "errorMessage": "check GlobalState exists"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CiACAAEmBQlicmFuZE5hbWULY3JlYXRvck5hbWUJYWRtaW5OYW1lDWNvbnRyYWN0UHJpY2UMcHJvcG9zYWxUZXh0MRtBALqCAgQxwk+kBFUFoDA2GgCOAgB9AAIiQzEZFEQxGESIAL1LBBUWVwYCTwVQSwQVFlcGAk8FUEsEFRZXBgJPBVBPBBZLBBUWVwYCTwVQSwQVgRAISRZXBgKAAgAQTFBLBRVPAghJFlcGAk8CTFBLBBVPAghMTwNQTBZXBgJQTwRQTwNQTwJQTFCABBUffHVMULAjQzEZFEQxGEQ2GgFXAgA2GgJXAgA2GgNXAgA2GgQXNhoFVwIAiAANI0MxGUD/VjEYFEQjQ4oFACiL+2cpi/xnKov9ZyuL/mcnBIv/Z4kiKGVEIillRCIqZUQiK2VEIicEZUSJ",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 7,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}